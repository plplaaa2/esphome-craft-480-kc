esphome:
  name: "${name}"
  comment: "${device_description}"
  platformio_options:
    board_build.arduino.memory_type: qio_opi
    board_build.flash_mode: dio
  on_boot: 
    then:
      - light.turn_on: 
          id: backlight
          brightness: !lambda return id(backlight_brightness).state / 100;

esp32:
  board: esp32-s3-devkitc-1
  framework:    
    type: ${type}
    sdkconfig_options:
      COMPILER_OPTIMIZATION_SIZE: y
      CONFIG_ESP32S3_DEFAULT_CPU_FREQ_240: "y"
      CONFIG_ESP32S3_DATA_CACHE_64KB: "y"
      CONFIG_SPIRAM_FETCH_INSTRUCTIONS: y
      CONFIG_SPIRAM_RODATA: y
  
  flash_size: 16MB
  #partitions: "default_16MB.csv"
  
psram:
  mode: octal
  speed: 80MHz

# Enable logging
logger:
  level: DEBUG
  #baud_rate: 0

# Enable Home Assistant API
api:
  #encryption:
    #key: !secret api_key
  on_client_connected:
    - if:
        condition:
          - lambda: 'return (0 == client_info.find("Home Assistant "));'
        then:
          - lvgl.widget.show: ha_connected_title
          
  on_client_disconnected:
    - if:
        condition:
          lambda: 'return (0 == client_info.find("Home Assistant "));'
        then:
          - lvgl.widget.hide: ha_connected_title
ota:
  - platform: esphome
    password: !secret hotspot_pw

wifi:
  id: iptime
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  power_save_mode: HIGH
  fast_connect: true
  #manual_ip: 
   #static_ip: $s_ip
   #gateway: 192.168.1.1
   #subnet: 255.255.255.0
   #dns1: 1.1.1.1
   #dns2: 8.8.8.8

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${name} hotspot"
    #password:
  on_connect:
    - lvgl.widget.show: wifi_connected_title
    - lvgl.widget.hide: wifi_disconnected_title
  on_disconnect:
    - lvgl.widget.hide: wifi_connected_title
    - lvgl.widget.show: wifi_disconnected_title

captive_portal:

i2c:
  scl: GPIO45
  sda: GPIO19
  scan: True

spi: 
  clk_pin: GPIO48
  mosi_pin: GPIO47

time:
  - platform: homeassistant
    id: time_comp
    on_time_sync:
      - script.execute: time_update
      - script.execute: date_update
      - script.execute: ampm_update
    on_time:
      - minutes: '*'
        seconds: '0'
        then:
          - script.execute: time_update
          - script.execute: date_update
          - script.execute: ampm_update
sun:
  id: sun_time
  latitude: $latitude     
  longitude: $longitude   
  
text_sensor:
  - platform: version
    name: "${name} Esphome Version"
  - platform: wifi_info
    ip_address:
     name: ESP IP Address
    mac_address:
      name: ESP Mac Wifi Address  

binary_sensor:
  - platform: status
    name: "${name} Connection Status"

button:    
  - platform: restart
    name: "${name} Restart"
    id: re_start
    entity_category: diagnostic    
    
sensor:
   # 와이파이 신호 세기
  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name: "WiFi Signal dB"
    id: wifi_signal_db
    internal: true
    entity_category: "diagnostic"

  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_signal_db
    name: "${name} WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "Signal %"
    entity_category: "diagnostic"
    device_class: ""
    icon: mdi:wifi
    
    
lvgl:
  displays: 
    - my_display
  touchscreens:
    - my_touchscreen
  log_level: INFO